name: Build ,DEPLOY

# on:
#   workflow_dispatch:
#     inputs:
#       version:
#         description: 'Image version'
#         required: true
on:
  push:
    branches: [main]
env:
  REGISTRY: registry.digitalocean.com/urevise-frontend
  IMAGE_NAME: urevise
  
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
      - name: Build image 
        run: docker build -t urevise .
      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_API_TOKENP }}
      - name: Log in to DO Container Registry 
        run: doctl registry login --expiry-seconds 600
      - name: Tag image 
        run:
          docker tag urevise registry.digitalocean.com/urevise-frontend/urevise
          # docker tag urevise registry.digitalocean.com/urevise-frontend:${{github.event.inputs.version }}
      - name: Push image to DO Container Registry 
        run: docker push registry.digitalocean.com/urevise-frontend/urevise
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    # run: docker push rgiegistry.ditalocean.com/urevise-frontend:${{ github.event.inputs.version }}
    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DIGITALOCEAN_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 700 ~/.ssh/id_rsa
          echo "${{ secrets.DIGITALOCEAN_SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 700 ~/.ssh/id_rsa.pub
          ssh-keyscan -H ${{ secrets.DROPLET_IP}} >> ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.7
        with:
           api_token: ${{ secrets.DIGITALOCEAN_API_TOKENP }}
           key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
           host: ${{ secrets.DROPLET_IP }}
           envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
           script: |
            docker pull registry.digitalocean.com/urevise-frontend/urevise:latest
            docker stop urevise
            # Remove old container
            # docker rm $(echo $IMAGE_NAME)
            docker rm urevise
            # Run a new container from a new image
            docker run -d 
            --restart always \
            --name urevise
