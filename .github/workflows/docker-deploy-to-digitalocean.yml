name: Build and publish manually

# on:
#   workflow_dispatch:
#     inputs:
#       version:
#         description: 'Image version'
#         required: true
on:
  push:
    branches: [main]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
      - name: Build image 
        run: docker build -t urevise .
      - name: Install doctl 
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_API_TOKENP }}
      - name: Log in to DO Container Registry 
        run: doctl registry login --expiry-seconds 600
      - name: Tag image 
        run:
          docker tag urevise registry.digitalocean.com/urevise-frontend/urevise
          # docker tag urevise registry.digitalocean.com/urevise-frontend:${{github.event.inputs.version }}
      - name: Push image to DO Container Registry 
        run: docker push registry.digitalocean.com/urevise-frontend/urevise

        # run: docker push rgiegistry.ditalocean.com/urevise-frontend:${{ github.event.inputs.version }}

  
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: lloydt
          key: ${{ secrets.DIGITALOCEAN_SSH_PUBLIC_KEY}}
          passphrase: gemun6dd
          # passphrase: ${{ secrets.PASSPHRASE }}
          
          # envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_API_TOKENP }},GITHUB_SHA
          script: |
            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_API_TOKENP }} -p ${{ secrets.DIGITALOCEAN_API_TOKENP }} registry.digitalocean.com
            # Stop running container
            # docker stop $(echo $IMAGE_NAME)
            docker stop urevise
            # Remove old container
            # docker rm $(echo $IMAGE_NAME)
            doscker rm urevise
            # Run a new container from a new image
            docker run -d 
            --restart always \
            --name urevise
            # --name $(echo $IMAGE_NAME) \
            echo registry.digitalocean.com/urevise-frontend/urevise
            # $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)      